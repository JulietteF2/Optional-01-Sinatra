exit
continue
exit
recipes
exit
recipes
exit
recipes[0][:name]
recipes.name
@cookbook
cookbook
recipes
exit
imported_recipe.name
imported_recipe
exit
        }
          difficulty: difficulty
          prep_time: prep_time,
          description: description,
          name: name,
        recipes << {
        difficulty = article.search(".teaser-item__info-item--skill-level").text.strip
        prep_time = article.search(".teaser-item__info-item--total-time").text.strip
        description = article.search(".teaser-item__text-content").text
        name = article.search(".teaser-item__title").text.strip
        count += 1
      until count == 5
recipes = articles.map do |article|
recipes = articles.map do { |article| article.search(".teaser-item__title").text.strip }
articles.map do { |article| name = article.search(".teaser-item__title").text.strip }
articles.search(".teaser-item__title").text.strip
articles
recipes
continue
recipes
exit
scrapper.recipes
scrapper.perform
continue
scrapped_recipes
exit
scrapped_recipes
scapped_recipes
scrapped_recipes = scrapper.recipes
scrapper.recipes
scrapper.perform
scrapper
scrapped_recipes
exit
puts recipes
recipes
exit
count
recipes
exit
recipes
p recipes
exit
p recipes
puts recipes
exit
puts recipes
exit
puts recipes
exit
puts recipes
exit
puts recipes
exit
difficulty.strip
difficulty
exit
prep_time.strip
prep_time
prep_time = article.search(".teaser-item__info-item--total-time").text
article.search(".teaser-item__info-item--total-time").text
continue
prep_time_hour.class
prep_time_hour
prep_time_hour = article.search(".teaser-item__info-item--total-time").search("hours").text
description = article.search(".teaser-item__text-content").text
continue
prep_time.search(".hours").text
prep_time.search(".mins").text
prep_time
exit
description
exit
title.strip
title
exit
results.search("article").each { |article| puts article.text }
results.search("article").each do |article|
results.search("article")
results.text
results = page.search(".search-content")
page.search(".search-content").text
page.search(".search-content")
exit
page.search(".search-content_col_span9")
page.search(".search-content_col_span9").text
page.search("."search-content_col_span9").text
exit
book.search(".minirating").text.strip
book.search(".minirating").text.strip.to_f
book.search("span.greyText")[1].text.strip.to_f
title
continue
book.search("span.greyText")[1].text.strip.to_f
rating
title
rating
continue
title
book
books
rating
continue
exit
book.search("span.greyText")[1].text.strip.to_f
book.search("span.greyText")[1].text.strip
book.search("span.greyText")[1].text
book.search("span.greyText").first.text
book.search("span[itemprop='name']")[1].text
book.search("span[itemprop='author']").text
book.search("span[itemprop='name']").first.text
book.search("span[itemprop='name']").first
book.search("span[itemprop='name']")
book.search("itemprop='name'")
book.search("td:first a").attr("href").value
book.search("td:first a").attr("href")
book.search("td:first a").text
book.search("td:first a")
book.search("td:first a").count
book.search("td:first").count
book.search("td").first.count
book.search("td").count
book.text
book
exit
rows.first
rows = table.search("tr")
rows.first
row = table.search("tr")
table.search("tr").count
table.class
table = page.search("table").first
table.class
page.search("table").first
page.search("table").count
page.methods
page.class
page
exit
